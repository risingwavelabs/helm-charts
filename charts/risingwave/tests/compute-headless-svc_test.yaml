suite: Test compute serverless service
templates:
- templates/compute-headless-svc.yaml
chart:
  appVersion: 1.0.0
  version: 0.0.1
tests:
- it: file doesn't render on standalone mode
  set:
    standalone.enabled: true
  asserts:
  - hasDocuments:
      count: 0
- it: file should render in normal cases
  asserts:
  - hasDocuments:
      count: 1
  - containsDocument:
      apiVersion: v1
      kind: Service
  - equal:
      path: metadata.name
      value: RELEASE-NAME-risingwave-compute-headless
- it: service should contains labels and annotations
  asserts:
  - isSubset:
      path: metadata.labels
      content:
        helm.sh/chart: risingwave-0.0.1
        app.kubernetes.io/name: risingwave
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/instance: RELEASE-NAME
        risingwave.risingwavelabs.com/component: compute
  - notExists:
      path: metadata.annotations
- it: service should reflect common labels and annotations
  set:
    commonLabels:
      LABEL: LABEL_V
    commonAnnotations:
      ANNOTATION: ANNOTATION_V
  asserts:
  - isSubset:
      path: metadata.labels
      content:
        helm.sh/chart: risingwave-0.0.1
        app.kubernetes.io/name: risingwave
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/instance: RELEASE-NAME
        risingwave.risingwavelabs.com/component: compute
        LABEL: LABEL_V
  - exists:
      path: metadata.annotations
  - isSubset:
      path: metadata.annotations
      content:
        ANNOTATION: ANNOTATION_V
- it: service should has `clusterIP=None`
  asserts:
  - equal:
      path: spec.clusterIP
      value: None
- it: service should have correct selector
  asserts:
  - equal:
      path: spec.selector
      value:
        app.kubernetes.io/name: risingwave
        app.kubernetes.io/instance: RELEASE-NAME
        risingwave.risingwavelabs.com/component: compute
- it: service should contain expecting ports
  asserts:
  - lengthEqual:
      path: spec.ports
      count: 2
  - contains:
      path: spec.ports
      content:
        name: svc
        port: 5688
        targetPort: svc
  - contains:
      path: spec.ports
      content:
        name: metrics
        port: 1222
        targetPort: metrics
- it: service should reflect port changes
  set:
    ports:
      compute:
        svc: 1
        metrics: 2
  asserts:
  - lengthEqual:
      path: spec.ports
      count: 2
  - contains:
      path: spec.ports
      content:
        name: svc
        port: 1
        targetPort: svc
  - contains:
      path: spec.ports
      content:
        name: metrics
        port: 2
        targetPort: metrics
- it: service should contain expecting ports (compact mode)
  set:
    compactMode:
      enabled: true
  asserts:
  - lengthEqual:
      path: spec.ports
      count: 4
  - contains:
      path: spec.ports
      content:
        name: svc
        port: 5688
        targetPort: svc
  - contains:
      path: spec.ports
      content:
        name: metrics
        port: 1222
        targetPort: metrics
  - contains:
      path: spec.ports
      content:
        name: f-svc
        port: 4567
        targetPort: f-svc
  - contains:
      path: spec.ports
      content:
        name: f-metrics
        port: 8080
        targetPort: f-metrics
- it: service should reflect port changes (compact mode)
  set:
    compactMode:
      enabled: true

    ports:
      compute:
        svc: 1
        metrics: 2
      frontend:
        svc: 3
        metrics: 4
  asserts:
  - lengthEqual:
      path: spec.ports
      count: 4
  - contains:
      path: spec.ports
      content:
        name: svc
        port: 1
        targetPort: svc
  - contains:
      path: spec.ports
      content:
        name: metrics
        port: 2
        targetPort: metrics
  - contains:
      path: spec.ports
      content:
        name: f-svc
        port: 3
        targetPort: f-svc
  - contains:
      path: spec.ports
      content:
        name: f-metrics
        port: 4
        targetPort: f-metrics
