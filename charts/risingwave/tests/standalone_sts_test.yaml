suite: Test standalone statefulset
templates:
- templates/standalone/standalone-sts.yaml
chart:
  appVersion: 1.0.0
  version: 0.0.1
tests:
- it: file shouldn't render when standalone mode disabled
  set:
    standalone.enabled: false
  asserts:
  - hasDocuments:
      count: 0
- it: file should render when standalone mode enabled
  set:
    standalone.enabled: true
  asserts:
  - hasDocuments:
      count: 1
  - containsDocument:
      apiVersion: apps/v1
      kind: StatefulSet
  - equal:
      path: metadata.name
      value: RELEASE-NAME-risingwave-standalone
- it: statefulset should contain labels and annotations
  set:
    standalone.enabled: true
  asserts:
  - isSubset:
      path: metadata.labels
      content:
        helm.sh/chart: risingwave-0.0.1
        app.kubernetes.io/name: risingwave
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/instance: RELEASE-NAME
  - notExists:
      path: metadata.annotations
- it: statefulset should reflect common labels and annotations
  set:
    standalone.enabled: true
    commonLabels:
      LABEL: LABEL_V
    commonAnnotations:
      ANNOTATION: ANNOTATION_V
  asserts:
  - isSubset:
      path: metadata.labels
      content:
        helm.sh/chart: risingwave-0.0.1
        app.kubernetes.io/name: risingwave
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/instance: RELEASE-NAME
        LABEL: LABEL_V
  - exists:
      path: metadata.annotations
  - isSubset:
      path: metadata.annotations
      content:
        ANNOTATION: ANNOTATION_V
- it: statefulset should pass on default options
  set:
    standalone.enabled: true
  asserts:
  - equal:
      path: spec.selector
      value:
        matchLabels:
          app.kubernetes.io/name: risingwave
          app.kubernetes.io/instance: RELEASE-NAME
          risingwave.risingwavelabs.com/component: standalone
  - equal:
      path: spec.serviceName
      value: RELEASE-NAME-risingwave
  - equal:
      path: spec.updateStrategy
      value:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: "100%"
  - equal:
      path: spec.podManagementPolicy
      value: Parallel
  - equal:
      path: spec.minReadySeconds
      value: 0
  # Assert the spec.template.metadata are as expected.
  - equal:
      path: spec.template.metadata
      value:
        labels:
          app.kubernetes.io/name: risingwave
          app.kubernetes.io/instance: RELEASE-NAME
          risingwave.risingwavelabs.com/component: standalone
          risingwave/name: RELEASE-NAME-risingwave
          risingwave/component: standalone
        annotations:
  # Assert the fields under spec.template.spec other than containers are as expected.
  - isSubset:
      path: spec.template.spec
      content:
        volumes:
        - name: config
          configMap:
            name: RELEASE-NAME-risingwave-configuration
        restartPolicy: Always
        terminationGracePeriodSeconds: 1
        serviceAccountName: RELEASE-NAME-risingwave
        automountServiceAccountToken: true
        hostNetwork: false
        hostPID: false
        hostIPC: false
        enableServiceLinks: false
        preemptionPolicy: PreemptLowerPriority
        setHostnameAsFQDN: false
  # Assert that there is a `standalone` container.
  - contains:
      path: spec.template.spec.containers
      content:
        name: standalone
      count: 1
      any: true
  # Assert that the container spec of `standalone` is as expected.chart:
  - isSubset:
      path: spec.template.spec.containers[0]
      content:
        name: standalone
        imagePullPolicy: IfNotPresent
        command:
        - /risingwave/bin/risingwave
        - standalone
        args:
        - >-
          --meta-opts=--listen-addr 127.0.0.1:5690
            --advertise-addr 127.0.0.1:5690
            --dashboard-host 0.0.0.0:5691
            --prometheus-host 0.0.0.0:1250
            --backend $(RW_BACKEND)
            --etcd-endpoints $(RW_ETCD_ENDPOINTS)
            --state-store $(RW_STATE_STORE)
            --data-directory $(RW_DATA_DIRECTORY)
            --config-path /risingwave/config/risingwave.toml
        - >-
          --compute-opts=--config-path /risingwave/config/risingwave.toml
            --listen-addr 127.0.0.1:5688
            --prometheus-listener-addr 0.0.0.0:1222
            --advertise-addr 127.0.0.1:5688
            --async-stack-trace verbose
            --role both
            --meta-address http://127.0.0.1:5690
        - >-
          --frontend-opts=--config-path /risingwave/config/risingwave.toml
            --listen-addr 0.0.0.0:4567
            --advertise-addr 127.0.0.1:4567
            --prometheus-listener-addr 0.0.0.0:8080
            --health-check-listener-addr 127.0.0.1:6786
            --meta-addr http://127.0.0.1:5690
        - >-
          --compactor-opts=--config-path /risingwave/config/risingwave.toml
            --listen-addr 127.0.0.1:6660
            --advertise-addr 127.0.0.1:6660
            --prometheus-listener-addr 0.0.0.0:1260
            --meta-address http://127.0.0.1:5690
        ports:
        - containerPort: 5690
          name: m-svc
          protocol: TCP
        - containerPort: 5691
          name: m-dashboard
          protocol: TCP
        - containerPort: 1250
          name: m-metrics
          protocol: TCP
        - containerPort: 4567
          name: f-svc
          protocol: TCP
        - containerPort: 8080
          name: f-metrics
          protocol: TCP
        - containerPort: 5688
          name: c-svc
          protocol: TCP
        - containerPort: 1222
          name: c-metrics
          protocol: TCP
        - containerPort: 6660
          name: cp-svc
          protocol: TCP
        - containerPort: 1260
          name: cp-metrics
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /risingwave/config
          name: config
          readOnly: true
        startupProbe:
          initialDelaySeconds: 2
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 12
          tcpSocket:
            port: f-svc
        livenessProbe:
          initialDelaySeconds: 2
          periodSeconds: 10
          tcpSocket:
            port: f-svc
        readinessProbe:
          initialDelaySeconds: 2
          periodSeconds: 10
          tcpSocket:
            port: f-svc
  # Env asserts.
  - contains:
      path: spec.template.spec.containers[0].env
      content:
        name: AWS_EC2_METADATA_DISABLED
        value: "true"
  - contains:
      path: spec.template.spec.containers[0].env
      content:
        name: RUST_LOG
        value: INFO
  - contains:
      path: spec.template.spec.containers[0].env
      content:
        name: RUST_BACKTRACE
        value: full
  - contains:
      path: spec.template.spec.containers[0].env
      content:
        name: POD_IP
        valueFrom:
          fieldRef:
            fieldPath: "status.podIP"
  - contains:
      path: spec.template.spec.containers[0].env
      content:
        name: POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: "metadata.name"
  - contains:
      path: spec.template.spec.containers[0].env
      content:
        name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: "metadata.namespace"
  - contains:
      path: spec.template.spec.containers[0].env
      content:
        name: CONTAINER_CPU_LIMIT
        valueFrom:
          resourceFieldRef:
            resource: "limits.cpu"
  - contains:
      path: spec.template.spec.containers[0].env
      content:
        name: CONTAINER_MEMORY_LIMIT
        valueFrom:
          resourceFieldRef:
            resource: "limits.memory"
- it: statefulset should reflect pod labels
  set:
    standalone:
      enabled: true
      podLabels:
        LABEL_K: LABEL_V
  asserts:
  - isSubset:
      path: spec.template.metadata.labels
      content:
        LABEL_K: LABEL_V
# Below are tests for Pod template.
- it: statefulset should reflect pod annotations
  set:
    standalone:
      enabled: true
      podAnnotations:
        ANNOTATION_K: ANNOTATION_V
  asserts:
  - isSubset:
      path: spec.template.metadata.annotations
      content:
        ANNOTATION_K: ANNOTATION_V
- it: statefulset should reflect image pull secrets
  set:
    image:
      pullSecrets:
      - regcred
    standalone:
      enabled: true
  asserts:
  - equal:
      path: spec.template.spec.imagePullSecrets
      value:
      - name: regcred
- it: statefulset should reflect extra volumes
  set:
    standalone:
      enabled: true

      extraVolumes:
      - name: vol
        configMap:
          name: cm-vol
  asserts:
  - contains:
      path: spec.template.spec.volumes
      content:
        name: vol
        configMap:
          name: cm-vol
- it: statefulset should reflect termination grace period seconds
  set:
    standalone:
      enabled: true

      terminationGracePeriodSeconds: 2
  asserts:
  - equal:
      path: spec.template.spec.terminationGracePeriodSeconds
      value: 2
- it: statefulset should reflect node selector
  set:
    standalone:
      enabled: true

      nodeSelector:
        a: b
  asserts:
  - equal:
      path: spec.template.spec.nodeSelector
      value:
        a: b
- it: statefulset should reflect share process namespace
  set:
    standalone:
      enabled: true

      shareProcessNamespace: true
  asserts:
  - equal:
      path: spec.template.spec.shareProcessNamespace
      value: true
- it: statefulset should reflect pod security context
  set:
    standalone:
      enabled: true

      podSecurityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
  asserts:
  - equal:
      path: spec.template.spec.securityContext
      value:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
- it: statefulset should reflect affinity
  set:
    standalone:
      enabled: true

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - antarctica-east1
                - antarctica-west1
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: another-node-label-key
                operator: In
                values:
                - another-node-label-value
  asserts:
  - equal:
      path: spec.template.spec.affinity
      value:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - antarctica-east1
                - antarctica-west1
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: another-node-label-key
                operator: In
                values:
                - another-node-label-value
- it: statefulset should reflect scheduler name
  set:
    standalone:
      enabled: true

      schedulerName: a
  asserts:
  - equal:
      path: spec.template.spec.schedulerName
      value: a
- it: statefulset should reflect tolerations
  set:
    standalone:
      enabled: true

      tolerations:
      - key: "key1"
        operator: "Equal"
        value: "value1"
        effect: "NoSchedule"
  asserts:
  - equal:
      path: spec.template.spec.tolerations
      value:
      - key: "key1"
        operator: "Equal"
        value: "value1"
        effect: "NoSchedule"
- it: statefulset should reflect priority class name
  set:
    standalone:
      enabled: true

      priorityClassName: p1
  asserts:
  - equal:
      path: spec.template.spec.priorityClassName
      value: p1
- it: statefulset should reflect runtime class name
  set:
    standalone:
      enabled: true

      runtimeClassName: p1
  asserts:
  - equal:
      path: spec.template.spec.runtimeClassName
      value: p1
- it: statefulset should reflect image pull policy
  set:
    image:
      pullPolicy: Always

    standalone:
      enabled: true
  asserts:
  - equal:
      path: spec.template.spec.containers[0].imagePullPolicy
      value: Always
- it: statefulset should reflect extra env vars configmap
  set:
    standalone:
      enabled: true
      extraEnvVarsConfigMap: a
  asserts:
  - contains:
      path: spec.template.spec.containers[0].envFrom
      content:
        configMapRef:
          name: a
- it: statefulset should reflect extra env vars secret
  set:
    standalone:
      enabled: true
      extraEnvVarsSecret: a
  asserts:
  - contains:
      path: spec.template.spec.containers[0].envFrom
      content:
        secretRef:
          name: a
- it: statefulset should reflect extra env vars
  set:
    standalone:
      enabled: true
      extraEnvVars:
      - name: A
        value: A
      - name: B
        value: B
  asserts:
  - contains:
      path: spec.template.spec.containers[0].env
      content:
        name: A
        value: A
  - contains:
      path: spec.template.spec.containers[0].env
      content:
        name: B
        value: B
- it: statefulset should reflect resources
  set:
    standalone:
      enabled: true
      resources:
        limits:
          cpu: 1
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 100Mi
  asserts:
  - equal:
      path: spec.template.spec.containers[0].resources
      value:
        limits:
          cpu: 1
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 100Mi
- it: statefulset should reflect extra volume mounts
  set:
    standalone:
      enabled: true
      extraVolumeMounts:
      - mountPath: /tmp
        name: tmp
        readOnly: false
  asserts:
  - contains:
      path: spec.template.spec.containers[0].volumeMounts
      content:
        mountPath: /tmp
        name: tmp
        readOnly: false
- it: statefulset should reflect security context
  set:
    standalone:
      enabled: true
      securityContext:
        allowPrivilegeEscalation: true
  asserts:
  - equal:
      path: spec.template.spec.containers[0].securityContext
      value:
        allowPrivilegeEscalation: true
- it: statefulset should reflect additional containers
  set:
    standalone:
      enabled: true
      additionalContainers:
      - name: x
      - name: y
        image: z
  asserts:
  - contains:
      path: spec.template.spec.containers
      content:
        name: x
  - contains:
      path: spec.template.spec.containers
      content:
        name: y
        image: z
